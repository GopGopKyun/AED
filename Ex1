//Lista 1 
//22/03
//Gabriel de Oliveira Pellegrini Louzada

#include <stdio.h>
#include <stdlib.h>

void criaMatriz(int **matriz, int m, int n);
void leiaMatriz(int **mat, int m, int n);
int somaMatriz(int **mat, int m, int n);
int * colunaMat(int **mat, int m, int n, int ncoluna);
void liberamatriz(int **mat, int ncoluna);
void imprimematriz(int **mat, int m, int n);
void imprimevetor (int *vet, int n);


int main()
{
    int escolha=1,linhas=0,colunas=0;
    int **matriz = NULL;
    int *vetor = NULL;
    
    while(escolha!=0){
    printf("1) Criar uma matriz\n2) Preencher a matriz\n3) Soma dos elementos da matriz\n4) Retornar elementos de determinada matriz\n5) Sair\n6) Imprimir Matriz\n7) Imprimir Vetor\nInserir comando:");
    scanf("%d", &escolha);
    
    switch(escolha){
        case 1:
            printf("Insira a quantidade de linhas que desejas na sua matriz: ");
            setbuf(stdin,NULL);
            scanf("%d", &linhas);
            printf("Insira a quantidade de colunas que desejas na sua matriz: ");
            setbuf(stdin,NULL);
            scanf("%d", &colunas);
            criaMatriz(matriz, linhas, colunas);
            break;
        case 2:
            leiaMatriz(matriz, linhas, colunas);
            break;
        case 3:
            int soma;
            somaMatriz;
            printf("O resultado da soma sera: %d", soma);
            break;
        case 4:
            colunaMat;  
            break;
        case 5:
            escolha=0;
            break;
        case 6:
            imprimematriz(matriz,linhas,colunas);
			break;
		 case 7:
			imprimevetor(vetor,linhas);
			break;
    }
    }
    return 0;
}

void criaMatriz(int **matriz, int m, int n)
{
   int i;
   matriz =  (int **) malloc(sizeof(int *)*m);
	for(i=0;i<m;i++){
		matriz[i] = (int *) malloc(sizeof(int)*n);
	}
}
void leiaMatriz(int **mat, int m, int n) 
{
    int i, j;
    for(i=0;i<m;i++){
        for(j=0;j<n;j++){
            printf("Insira o numero da posicao [%d][%d] da matriz: ", i+1, j+1);
            scanf("%d", &mat[i][j]);
        }
    }
} 
int somaMatriz(int **mat, int m, int n)
{
    int soma, i, j;
    for(i=0;i<m;i++){
        for(j=0;j<n;j++){
        soma += mat[i][j];    
        }
    }
    return soma;
}
int * colunaMat(int **mat, int m, int n, int ncoluna)
{
    int i;
    int *vetor = (int *)malloc(sizeof(int)*ncoluna);
	for(i=0;i<m;i++){
		vetor[i] = mat[i][ncoluna];
    }
    return vetor;
}
void imprimematriz(int **mat, int m, int n)
{
    printf("---------------------------------------------\n");
    int i,j;
    for(i=0;i<m;i++){
        for(j=0;j<n;j++){
            printf("[%d]", mat[i][j]);
            
    }
    printf("\n");
    }
    printf("---------------------------------------------\n");
}
void imprimevetor(int *vet, int n){
    int i;
    for(i=0;i<n;i++){
        printf("%d ", vet[i]);
    }
}
